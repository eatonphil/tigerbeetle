ssh root@65.21.207.251

# copy files and folders between local machine and server
scp folder/file root@65.21.207.251:/folder/file #requires absolute path, use -R for folders

git clone...

./scripts/install_zig.sh

sudo add-apt-repository ppa:longsleep/golang-backports
sudo apt update
sudo apt install golang-go

systemd has timers - similar to cron job - so maybe we want to use that for the cron job.
systemd stop services and do update and thensystemd start services. 

create a service, separate binary, a shell script that accepts special arguments
zig/zig build vopr
git pull - how long - once an hour?

how long to do the 1000seeds, probably gonna be 10X longer 
Bring down max ticks 
Rather combine timer into service so part of loop, do update at the end of the loop, don't lose a seed. Also removes a level of concurrency.

/etc/systemd/system/vopr.service 
Check status with sudo systemctl status vopr.service
start with sudo systemctl start vopr.service - must ensure correct branch is checked out in git

look at journalctl tool to veiw logs properly
Run top to see what's going on in the system
to stop sudo systemctl stop vopr.service

sudo adduser voprhub
sudo adduser voprrunner
sudo usermod -aG sudo voprhub
sudo usermod -aG sudo voprrunner

sudo -i (if you have sudo privileges you can become root like this. You need to be root before you can switch users)

Change users with su - voprhub
in /home/voprhub git clone tigerbeetle, mkdir hub, cd hub, clone tigerbeetle again

exit to go back to root
su - voprrunner
git clone tigerbeetle
exit to go back to root user

Need to cat your service setup file which you created with nano
```
[Unit]

Description=Continously runs the VOPR.

[Service]

User=voprrunner
WorkingDirectory=/home/voprrunner/tigerbeetle
ExecStart=/home/voprrunner/tigerbeetle/zig/zig build vopr -- --send="65.21.207.251:5555"
Restart=always

[Install]

WantedBy=multi-user.target
```

This was written with nano vopr.service

See man systemd for more info also systemd.unit and systemd.service
Perhaps restart should be set to on-success instead?

```
[Unit]

Description=Continously runs the VOPR Hub.

[Service]

User=voprhub
WorkingDirectory=/home/voprhub/hub/tigerbeetle/src/vopr
Environment="REPOSITORY_URL=https://api.github.com/repos/SarahNerdyBird/Go/issues"
Environment="TIGERBEETLE_DIRECTORY=/home/voprhub/tigerbeetle"
Environment="VOPR_HUB_ADDRESS=65.21.207.251:5555"
Environment="ISSUE_DIRECTORY=/home/voprhub"
Environment="DEVELOPER_TOKEN=******"
ExecStart=go run main.go
Restart=always

[Install]

WantedBy=multi-user.target
```

Build tigerbeetle%i into working directory - then only need one systemd configuration

Dev token has access to public repos only

zig was installed in /usr/local/lib/zig
Use a symlink in each tigerbeetle directory to point to /usr/local/lib/zig (ln -s /usr/local/lib/zig)
The reason for using the symlink to the global install is that there is now one place to update everything but the zig/zig commands still work in all tigerbeetle directories.

Shortened machine name simply to Ubuntu using nano /etc/hostname

Get multiple VOPRs running named vopr@.service - TODO remove old vopr.service file
create file nano /etc/systemd/system/voprs.service
```
[Unit]
Description=Continously runs the VOPR.
PartOf=vopr.target

[Service]

User=voprrunner
WorkingDirectory=/home/voprrunner/tigerbeetle%i
ExecStart=/home/voprrunner/tigerbeetle%i/zig/zig build vopr -- --send="65.21.207.251:5555"
Restart=always

[Install]

WantedBy=multi-user.target
```

Create three of those tigerbeetle1 etc. Then put them up with systemctl start vopr@1.service etc

Then create a target file to manage all instances called vopr.target
```
[Unit]
Description=Runs all VOPR services.
Requires=vopr@1.service vopr@2.service vopr@3.service

[Install]
WantedBy=multi-user.target
```